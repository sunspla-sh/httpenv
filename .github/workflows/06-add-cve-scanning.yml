---
name: 06 Build And Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Images
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # this permission is needed to create and update comments in PRs
    steps:
    -
      name: Set Up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set Up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Log In To Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build And Export To Docker Engine
      uses: docker/build-push-action@v5
      with:
        push: false
        load: true # export to docker engine rather than pushing to a registry
        tags: ${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
    -
      name: Run Trivy For All CVEs (Non-Blocking)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.run_id }}
        exit-code: 0
        format: table
        output: ${{ github.run_id }}-trivy
    - 
      name: Format Trivy Table
      run: (echo -e "Trivy scan results:\n\`\`\`text"; cat ${{ github.run_id }}-trivy) > tmp-trivy && echo -e "\`\`\`" | cat tmp-trivy - > ${{ github.run_id }}-trivy-formatted && rm tmp-trivy
    -
      name: Docker Metadata For Final Image Build
      id: docker_metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/docker-ci-automation
        flavor: |
          latest=false
        tags: |
          type=raw,value=06
    # the following lines are commented out so as not to conflict with 04-add-metadata.yml
    #      type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
    #      type=ref,event=pr
    #      type=ref,event=branch
    #      type=semver,pattern={{version}}
    -
      name: Build And Push To Docker Hub
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ steps.docker_metadata.outputs.tags }}
        labels: ${{ steps.docker_metadata.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
    # The following lines are commented out so as not to conflict with 99-parallelize-jobs.yml
    # # this step finds an old comment on a PR, if it exists, so that it can be updated with newer image tags
    # -
    #   name: Find Comment For Image Tags
    #   uses: peter-evans/find-comment@v3
    #   if: github.event_name == 'pull_request'
    #   id: fc_tag
    #   with:
    #     issue-number: ${{ github.event.pull_request.number }}
    #     comment-author: 'github-actions[bot]'
    #     body-includes: Docker image tag(s) pushed
    # # this step creates a new comment (or updates an old comment) on a PR with image tags that were generated by the docker_metadata step
    # -
    #   name: Create Or Update Comment For Image Tags
    #   uses: peter-evans/create-or-update-comment@v4
    #   if: github.event_name == 'pull_request'
    #   with:
    #     comment-id: ${{ steps.fc_tag.outputs.comment-id }}
    #     issue-number: ${{ github.event.pull_request.number }}
    #     body: |
    #       Docker image tag(s) pushed:
    #       ```text
    #       ${{ steps.docker_metadata.outputs.tags }}
    #       ```

    #       Labels added to images:
    #       ```text
    #       ${{ steps.docker_metadata.outputs.labels }}
    #       ```
    #     edit-mode: replace
    # this step finds an old comment on a PR, if it exists, so that it can be updated with newer trivy scans
    -
      name: Find Comment For Trivy
      uses: peter-evans/find-comment@v3
      if: github.event_name == 'pull_request'
      id: fc_trivy
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Trivy scan results
    # this step creates a new comment (or updates an old comment) on a PR with trivy scans that were loaded to an env variable by the tt step
    -
      name: Create Or Update Comment For Trivy
      uses: peter-evans/create-or-update-comment@v4
      if: github.event_name == 'pull_request'
      with:
        comment-id: ${{ steps.fc_trivy.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: ${{ github.run_id }}-trivy-formatted
        edit-mode: replace